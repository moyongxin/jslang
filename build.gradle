plugins {
    id "java"
}

group = "moyongxin"
version = "0.0.1"

repositories {
    mavenCentral()
}

task(generateHeaders, type: JavaCompile) {
    classpath = compileJava.classpath
    destinationDirectory = compileJava.destinationDirectory
    source = compileJava.exclude("moyongxin/jslang/JSlang.java").source
    options.compilerArgs += ["-h", file("natives/include/jni")]
}

tasks.withType(JavaCompile).configureEach {
    sourceCompatibility = "21"
    targetCompatibility = "21"

    it.options.encoding = "UTF-8"
}

task compileJNI {
    dependsOn generateHeaders

    doLast {
        exec {
            commandLine "cmake", "-GNinja", "-Snatives", "-Bnatives/build", "-DSLANG_PATH=slang", "-DCMAKE_INSTALL_PREFIX=build/install"
            environment "JAVA_HOME", System.properties['java.home']
        }
        exec {
            commandLine "cmake", "--build", "natives/build"
            environment "JAVA_HOME", System.properties['java.home']
        }
        exec {
            commandLine "cmake", "--install", "natives/build"
            environment "JAVA_HOME", System.properties['java.home']
        }
    }
}

compileJava.dependsOn compileJNI

clean.doFirst {
    delete fileTree("src/main/java/moyongxin/jslang/generated")
    delete fileTree("natives/build")
    delete fileTree("natives/include/jni")
}

processResources {
    dependsOn compileJNI
}

jar {
    from "build/install"

    manifest {
        attributes "Main-Class": "moyongxin.jslang.JSlang"
    }
}

task printVersion {
    // any code that goes here is part of configuring the task
    // this code will always get run, even if the task is not executed
    doLast { // add a task action
        // any code that goes here is part of executing the task
        // this code will only get run if and when the task gets executed

        println "$project.version"
        // to parse version in command line, use `gradle printVersion -q`
    }
}
